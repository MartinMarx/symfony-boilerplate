# https://help.github.com/en/actions
name: Symfony 5 CI Process
on: [push, pull_request]

jobs:
  symfony:
    name: Symfony 5.2 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-20.04
    services:
      # https://docs.docker.com/samples/library/mysql/
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.0']
    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, pgsql, dom, filter, gd, iconv, json, mbstring, pdo
          coverage: xdebug
          tools: composer:v2, php-cs-fixer, phpunit, symfony-cli, phpstan, phpcs, cs2pr
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      ## —— Yarn 🐱 ————————————————————————————————————————————————————————————
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          registry-url: npm.fontawesome.com
      - run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: Yarn build
        run: yarn run encore production

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          composer require --dev symfony/orm-pack symfony/phpunit-bridge
          composer install --no-progress --prefer-dist --optimize-autoloader
          php bin/phpunit install

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      - name: Check the Symfony console
        run: |
          bin/console about

      - name: Check Symfony requirements
        run: symfony check:requirements

      - name: Check Symfony security
        run: symfony check:security

      ## —— Coding standards ✨ ————————————————————————————————————————————————
      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: php-cs-fixer fix

      ## —— Static analysis ✨ —————————————————————————————————————————————————
      - name: Static analysis of PHP code (PHPStan)
        run: phpstan analyse src

      ## —— Tests ✅ ———————————————————————————————————————————————————————————

      - name: Run Migrations
        run: |
          php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

      - name: Run Tests
        run: php bin/phpunit --coverage-text
